# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # working_directory: /tmp
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
          username: gustavojardim
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          
      - image: cimg/openjdk:11.0

    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package

      - run:
          name: Test
          command: mvn test
          
      - store_artifacts:
          path: target/jacoco-reports/jacoco.xml
          destination: coverate_report
      # Analyze on SonarCloud
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test:
          context: SonarCloud
      - heroku/deploy-via-git:
          api-key: HEROKU_API_KEY 
          app-name: $HEROKU_APP_NAME 
          branch: $CIRCLE_BRANCH